{"version":3,"sources":["expressions/terminals.ts","expressions/glslEmitter.ts","expressions/scanner.ts","math/random.ts","expressions/expression.ts","expressions/parser.ts","expressions/generator.ts","expressions/evolve.ts","state/artSlice.ts","gl/glUtils.ts","expressions/glsl/default.vert","expressions/glsl/default.frag","view/Art.tsx","expressions/glsl/header.frag","view/Gallery.tsx","view/Editor.tsx","view/App.tsx","state/store.ts","index.tsx"],"names":["TerminalType","glslLiteral","literal","_exp","glslFn","fnName","exp","args","map","arg","emit","join","glslInfix","joiner","type","TERMINALS_MAP","get","glslEmitter","TokenType","TERMINALS","List","of","CONST","numArgs","tokenRegExp","name","CONST_PI","tokenLiteral","CONST_TAU","CONST_E","CONST_PHI","VAR_X","VAR_Y","VAR_T","OP_INV","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_ABS","OP_DOT","OP_CROSS","OP_SQRT","OP_POW","OP_EXP","OP_LOG","OP_LN","OP_SIN","OP_COS","OP_TAN","OP_FLOOR","OP_CEIL","OP_ROUND","OP_TRUNC","OP_MIN","OP_MAX","OP_CLIP","OP_WRAP","OP_USHIFT","OP_BLEND","OP_V","OP_RGB","OP_BW","toMap","mapKeys","key","val","LITERAL_TERMINALS","filter","_key","undefined","k","v","REGEXP_TERMINALS","op","terminalStrToToken","terminal","terminalMetadata","str","term","test","recognizeTerminal","TERMINAL","isWhitespace","s","isOpenParen","c","isCloseParen","Scanner","input","index","this","length","charAt","Error","nextChar","tokBuf","skipWhitespace","PAREN_OPEN","PAREN_CLOSE","terminated","prevChar","randomInt","min","max","Math","floor","random","randomRange","randomIntLessThan","Expression","size","reduce","a","b","flatten","expr","prefixIndex","nextRootIndex","offset","offsetConst","argPath","findPath","offsetSubpath","relative","prefixIndex1","prefixIndex2","path1","path2","j","i","concat","flatMap","newArgs","push","set","exp1Index","exp2Index","nearestCommonAncestor","parse","scan","parseExpression","nextToken","expectEnd","firstToken","tokenType","tok","expectAndConsume","token","parseTerminalAndArgList","ZERO_ARG_TERMINALS","NON_ZERO_ARG_TERMINALS","randomExpression","maxDepth","randomTerminal","abs","toString","randomConst","cross","exp1","exp2","sub1","randomSubExpressionAncestorWeighted","sub2","createArt","textSource","selected","createFirstGeneration","pieces","console","log","artSlice","createSlice","initialState","reducers","state","nextGeneration","prevGeneration","art","e","children","child","createNextGeneration","edit","event","payload","newSource","toggleSelected","actions","selectedPieces","createShader","gl","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","FRAGMENT_SHADER","VERTEX_SHADER","getShaderInfoLog","deleteShader","createProgram","fragmentShaderSrc","vertexShaderSrc","program","vertexShader","fragmentShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","Art","props","canvasRef","useRef","glProgram","useState","time","setTime","useEffect","current","getContext","positionBuffer","createBuffer","vertices","Float32Array","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","src","fragSrc","useProgram","positionLoc","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","animationRequest","startTime","update","useCallback","t","performance","now","periodSeconds","requestAnimationFrame","cancelAnimationFrame","viewport","drawingBufferWidth","drawingBufferHeight","glUniformTime","getUniformLocation","uniform1f","drawArrays","TRIANGLE_STRIP","className","ref","Gallery","useSelector","dispatch","useDispatch","canvases","piece","onClick","style","display","flexWrap","Editor","initialSrc","setSrc","rows","value","onChange","target","App","color","href","defaultProps","configureStore","reducer","artReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.8b5e8208.chunk.js","sourcesContent":["import {List, Map} from \"immutable\";\nimport {glslFn, glslInfix, glslLiteral} from \"./glslEmitter\";\nimport Expression from \"./expression\";\n\nexport enum TerminalType {\n    CONST = \"CONST\",\n    CONST_PI = \"CONST_PI\",\n    CONST_TAU = \"CONST_TAU\",\n    CONST_E = \"CONST_E\",\n    CONST_PHI = \"CONST_PHI\",\n\n    VAR_X = \"VAR_X\",\n    VAR_Y = \"VAR_Y\",\n    VAR_T = \"VAR_T\",\n\n    OP_INV = \"OP_INV\",\n\n    OP_ADD = \"OP_ADD\",\n    OP_SUB = \"OP_SUB\",\n    OP_MUL = \"OP_MUL\",\n    OP_DIV = \"OP_DIV\",\n    OP_MOD = \"OP_MOD\",\n    OP_ABS = \"OP_ABS\",\n\n    OP_DOT = \"OP_DOT\",\n    OP_CROSS = \"OP_CROSS\",\n\n    OP_SQRT = \"OP_SQRT\",\n    OP_POW = \"OP_POW\",\n    OP_EXP = \"OP_EXP\",\n    OP_LOG = \"OP_LOG\",\n    OP_LN = \"OP_LN\",\n\n    OP_SIN = \"OP_SIN\",\n    OP_COS = \"OP_COS\",\n    OP_TAN = \"OP_TAN\",\n\n    OP_FLOOR = \"OP_FLOOR\",\n    OP_CEIL = \"OP_CEIL\",\n    OP_ROUND = \"OP_ROUND\",\n    OP_TRUNC = \"OP_TRUNC\",\n\n    OP_MIN = \"OP_MIN\",\n    OP_MAX = \"OP_MAX\",\n\n    OP_CLIP = \"OP_CLIP\",\n    OP_WRAP = \"OP_WRAP\",\n    OP_USHIFT = \"OP_USHIFT\",\n\n    OP_BLEND = \"OP_BLEND\",\n\n    OP_V = \"OP_V\",\n    OP_RGB = \"OP_RGB\",\n    OP_BW = \"OP_BW\",\n}\n\nexport interface TerminalMetadata {\n    readonly type: TerminalType;\n    readonly numArgs: number;\n    readonly tokenLiteral?: string;\n    readonly tokenRegExp?: RegExp;\n    readonly glslEmitter: (exp: Expression) => string;\n}\n\nexport const TERMINALS: List<TerminalMetadata> = List.of<TerminalMetadata>(\n    {\n        type: TerminalType.CONST,\n        numArgs: 0,\n        tokenRegExp: /^-?\\d+(\\.\\d+)?$/,\n        glslEmitter: (exp) => `vec3(${exp.name}, ${exp.name}, ${exp.name})`\n    },\n    {type: TerminalType.CONST_PI, numArgs: 0, tokenLiteral: \"pi\", glslEmitter: glslLiteral(\"PI\")},\n    {type: TerminalType.CONST_TAU, numArgs: 0, tokenLiteral: \"tau\", glslEmitter: glslLiteral(\"TAU\")},\n    {type: TerminalType.CONST_E, numArgs: 0, tokenLiteral: \"e\", glslEmitter: glslLiteral(\"E\")},\n    {type: TerminalType.CONST_PHI, numArgs: 0, tokenLiteral: \"phi\", glslEmitter: glslLiteral(\"PHI\")},\n    {type: TerminalType.VAR_X, numArgs: 0, tokenLiteral: \"x\", glslEmitter: glslLiteral(\"x\")},\n    {type: TerminalType.VAR_Y, numArgs: 0, tokenLiteral: \"y\", glslEmitter: glslLiteral(\"y\")},\n    {type: TerminalType.VAR_T, numArgs: 0, tokenLiteral: \"t\", glslEmitter: glslLiteral(\"t\")},\n    {type: TerminalType.OP_INV, numArgs: 1, tokenLiteral: \"inv\", glslEmitter: glslFn(\"inv\")},\n    {type: TerminalType.OP_ADD, numArgs: 2, tokenLiteral: \"+\", glslEmitter: glslInfix(\"+\")},\n    {type: TerminalType.OP_SUB, numArgs: 2, tokenLiteral: \"-\", glslEmitter: glslInfix(\"-\")},\n    {type: TerminalType.OP_MUL, numArgs: 2, tokenLiteral: \"*\", glslEmitter: glslInfix(\"*\")},\n    {type: TerminalType.OP_DIV, numArgs: 2, tokenLiteral: \"/\", glslEmitter: glslInfix(\"/\")},\n    {type: TerminalType.OP_MOD, numArgs: 2, tokenLiteral: \"%\", glslEmitter: glslFn(\"mod\")},\n    {type: TerminalType.OP_ABS, numArgs: 1, tokenLiteral: \"abs\", glslEmitter: glslFn(\"abs\")},\n    {type: TerminalType.OP_DOT, numArgs: 2, tokenLiteral: \"dot\", glslEmitter: glslFn(\"dotp\")},\n    {type: TerminalType.OP_CROSS, numArgs: 2, tokenLiteral: \"cross\", glslEmitter: glslFn(\"cross\")},\n    {type: TerminalType.OP_SQRT, numArgs: 1, tokenLiteral: \"sqrt\", glslEmitter: glslFn(\"sqrt\")},\n    {type: TerminalType.OP_POW, numArgs: 2, tokenLiteral: \"pow\", glslEmitter: glslFn(\"pow\")},\n    {type: TerminalType.OP_EXP, numArgs: 1, tokenLiteral: \"exp\", glslEmitter: glslFn(\"exp\")},\n    {type: TerminalType.OP_LOG, numArgs: 2, tokenLiteral: \"log\", glslEmitter: glslFn(\"logb\")},\n    {type: TerminalType.OP_LN, numArgs: 1, tokenLiteral: \"ln\", glslEmitter: glslFn(\"log\")},\n    {type: TerminalType.OP_SIN, numArgs: 1, tokenLiteral: \"sin\", glslEmitter: glslFn(\"sin\")},\n    {type: TerminalType.OP_COS, numArgs: 1, tokenLiteral: \"cos\", glslEmitter: glslFn(\"cos\")},\n    {type: TerminalType.OP_TAN, numArgs: 1, tokenLiteral: \"tan\", glslEmitter: glslFn(\"tan\")},\n    {type: TerminalType.OP_FLOOR, numArgs: 1, tokenLiteral: \"floor\", glslEmitter: glslFn(\"floor\")},\n    {type: TerminalType.OP_CEIL, numArgs: 1, tokenLiteral: \"ceil\", glslEmitter: glslFn(\"ceil\")},\n    {type: TerminalType.OP_ROUND, numArgs: 1, tokenLiteral: \"round\", glslEmitter: glslFn(\"round\")},\n    {type: TerminalType.OP_TRUNC, numArgs: 1, tokenLiteral: \"trunc\", glslEmitter: glslFn(\"trunc\")},\n    {type: TerminalType.OP_MIN, numArgs: 2, tokenLiteral: \"min\", glslEmitter: glslFn(\"min\")},\n    {type: TerminalType.OP_MAX, numArgs: 2, tokenLiteral: \"max\", glslEmitter: glslFn(\"max\")},\n    {type: TerminalType.OP_CLIP, numArgs: 1, tokenLiteral: \"clip\", glslEmitter: glslFn(\"clip\")},\n    {type: TerminalType.OP_WRAP, numArgs: 1, tokenLiteral: \"wrap\", glslEmitter: glslFn(\"wrap\")},\n    {type: TerminalType.OP_USHIFT, numArgs: 1, tokenLiteral: \"ushift\", glslEmitter: glslFn(\"ushift\")},\n    {type: TerminalType.OP_BLEND, numArgs: 3, tokenLiteral: \"blend\", glslEmitter: glslFn(\"blend\")},\n    {type: TerminalType.OP_V, numArgs: 3, tokenLiteral: \"v\", glslEmitter: glslFn(\"rgb\")},\n    {type: TerminalType.OP_RGB, numArgs: 3, tokenLiteral: \"rgb\", glslEmitter: glslFn(\"rgb\")},\n    {type: TerminalType.OP_BW, numArgs: 1, tokenLiteral: \"bw\", glslEmitter: glslFn(\"bw\")},\n);\nconst TERMINALS_MAP: Map<TerminalType, TerminalMetadata> = TERMINALS.toMap().mapKeys((key: number, val: TerminalMetadata) => val.type);\n\nconst LITERAL_TERMINALS: Map<string, TerminalMetadata> = TERMINALS_MAP\n    .filter((val: TerminalMetadata, _key: TerminalType) => (val.tokenLiteral !== undefined))\n    .mapKeys((k: TerminalType, v: TerminalMetadata) => v.tokenLiteral!);\n\nconst REGEXP_TERMINALS: List<TerminalMetadata> = TERMINALS.filter(op => op.tokenRegExp !== undefined);\n\nexport function terminalMetadata(type: TerminalType): TerminalMetadata | undefined {\n    return TERMINALS_MAP.get(type);\n}\n\nexport function recognizeTerminal(str: string): TerminalMetadata | undefined {\n    const term = LITERAL_TERMINALS.get(str);\n    if (term !== undefined) {\n        return term;\n    }\n    for (const term of REGEXP_TERMINALS) {\n        if (term.tokenRegExp!.test(str)) {\n            return term;\n        }\n    }\n}","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport header from \"!raw-loader!./glsl/header.frag\";\nimport Expression from \"./expression\";\nimport {terminalMetadata} from \"./terminals\";\n\nexport function glslLiteral(literal: string): (exp: Expression) => string {\n    return (_exp) => literal;\n}\n\nexport function glslFn(fnName: string): (exp: Expression) => string {\n    return (exp: Expression) => `${fnName}(${exp.args.map(arg => emit(arg)).join(\", \")})`;\n}\n\nexport function glslInfix(joiner: string): (exp: Expression) => string {\n    return ((exp: Expression) => `(${exp.args.map(arg => emit(arg)).join(joiner)})`);\n}\n\nfunction emit(exp: Expression): string {\n    return terminalMetadata(exp.type)!.glslEmitter(exp);\n}\n\nexport function emitGlsl(exp: Expression): string {\n    return header + `\nvec3 expression(vec3 x, vec3 y, vec3 t) {\n    return ${emit(exp)};\n}\n`;\n}","import {recognizeTerminal, TerminalMetadata} from \"./terminals\";\n\nexport enum TokenType {\n    PAREN_OPEN = \"PAREN_OPEN\",\n    PAREN_CLOSE = \"PAREN_CLOSE\",\n    TERMINAL = \"TERMINAL\",\n}\n\nexport interface Token {\n    readonly type: TokenType;\n    readonly val: string;\n    readonly terminalMetadata?: TerminalMetadata;\n}\n\n/**\n * Convert the string representation of a single token of type OP into a Token.\n * Returns undefined if the string does not represent a valid OP token.\n */\nfunction terminalStrToToken(terminal: string): Token | undefined {\n    const terminalMetadata: TerminalMetadata | undefined = recognizeTerminal(terminal);\n    if (terminalMetadata) {\n        return {\n            type: TokenType.TERMINAL,\n            val: terminal,\n            terminalMetadata,\n        }\n    }\n}\n\nfunction isWhitespace(s: string): boolean {\n    return /^\\s+$/.test(s);\n}\n\nfunction isOpenParen(c: string): boolean {\n    return c === \"(\";\n}\n\nfunction isCloseParen(c: string): boolean {\n    return c === \")\";\n}\n\nfunction isParen(c: string): boolean {\n    return isOpenParen(c) || isCloseParen(c);\n}\n\nexport class Scanner {\n    readonly input: string;\n\n    private index: number;\n\n    constructor(input: string) {\n        this.input = input;\n        this.index = 0;\n    }\n\n    /**\n     * Move the scanner forward by one character. Returns the new character or undefined if no more characters.\n     */\n    private nextChar(): string | undefined {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input.charAt(this.index++);\n    }\n\n    /**\n     * Move the scanner backward by one character.\n     */\n    private prevChar(): void {\n        if (this.index <= 0) {\n            throw Error(`Scan error: prevChar() attempted on scanner at index ${this.index}.`)\n        }\n        this.index--;\n    }\n\n    /**\n     * Move the scanner forward until we get to the next non-whitespace char or the end of the string. Returns the new character or undefined if no more characters.\n     */\n    private skipWhitespace(): string | undefined {\n        let c: string | undefined;\n        do {\n            c = this.nextChar();\n        } while (c !== undefined && isWhitespace(c));\n        return c;\n    }\n\n    /**\n     * Move the scanner forward by one token. Return the new token or undefined if no more tokens.\n     */\n    nextToken(): Token | undefined {\n        let tokBuf = this.skipWhitespace();\n        if (tokBuf === undefined) {\n            return undefined;\n        }\n        if (isOpenParen(tokBuf)) {\n            return {type: TokenType.PAREN_OPEN, val: \"(\"};\n        } else if (isCloseParen(tokBuf)) {\n            return {type: TokenType.PAREN_CLOSE, val: \")\"};\n        }\n        let terminated = false;\n        while (!terminated) {\n            const nextChar = this.nextChar();\n            if (nextChar === undefined || isWhitespace(nextChar)) {\n                terminated = true;\n                break;\n            } else if (isParen(nextChar)) {\n                // Rewind by one char because we need to tokenize the delimiter in the case of parentheses.\n                this.prevChar();\n                terminated = true;\n                break;\n            } else {\n                tokBuf += nextChar;\n            }\n        }\n        return terminalStrToToken(tokBuf);\n    }\n}\n","export function randomRange(min: number, max: number): number {\n    if (max < min) {\n        throw new Error(`Invalid range [${min}, ${max})`);\n    }\n    return min + Math.random() * (max - min);\n}\n\nexport function randomInt(min: number, max: number): number {\n    return Math.floor(randomRange(Math.floor(min), Math.floor(max)));\n}\n\nexport function randomIntLessThan(max: number): number {\n    return randomInt(0, max);\n}","import {TerminalType} from \"./terminals\";\nimport {List} from \"immutable\";\nimport {randomIntLessThan} from \"../math/random\";\n\n/**\n * AST representation of an expression.\n *\n * There is no guarantee that each node in the tree is a unique instance. That is why it is necessary to refer to nodes\n * by prefix index relative to some ancestor node.\n */\nexport default class Expression {\n    readonly type: TerminalType;\n    readonly name: string;\n    readonly args: List<Expression>;\n    readonly size: number; // total number of nodes in subtree rooted at this expression.\n\n    constructor(type: TerminalType, name: string, args: List<Expression>) {\n        this.type = type;\n        this.name = name;\n        this.args = args;\n        this.size = args.map(arg => arg.size)\n            .reduce((a, b) => a + b, 1);\n    }\n\n    public toString(): string {\n        return this.flatten().map(expr => expr.name).join(\" \");\n    }\n\n    public findPath(prefixIndex: number): number[] | undefined {\n        if (prefixIndex < 0 || prefixIndex >= this.size) {\n            return undefined;\n        }\n        if (prefixIndex === 0) {\n            return [0];\n        }\n        let nextRootIndex = prefixIndex - 1;\n        let offset = 1;\n        for (let arg of this.args) {\n            const offsetConst = offset; // Ref in lambda below needs to be const.\n            const argPath = arg.findPath(nextRootIndex);\n            if (argPath !== undefined) {\n                const offsetSubpath = argPath.map(relative => relative + offsetConst);\n                return [0, ...offsetSubpath];\n            }\n            nextRootIndex -= arg.size;\n            offset += arg.size;\n        }\n        return undefined;\n    }\n\n    public nearestCommonAncestor(prefixIndex1: number, prefixIndex2: number): number | undefined {\n        const path1 = this.findPath(prefixIndex1);\n        const path2 = this.findPath(prefixIndex2);\n        if (path1 === undefined || path2 === undefined) {\n            return undefined;\n        }\n        let j = path2.length - 1;\n        for (let i = path1.length - 1; i >= 0; i--) {\n            while (j > 0 && path2[j] > path1[i]) {\n                j--;\n            }\n            if (path1[i] === path2[j]) {\n                return path1[i];\n            }\n        }\n        return 0;\n    }\n\n    public flatten(): List<Expression> {\n        return List.of<Expression>(this)\n            .concat(this.args.flatMap((expr) => expr.flatten()));\n    }\n\n    public get(prefixIndex: number): Expression | undefined {\n        return this.flatten().get(prefixIndex);\n    }\n\n    public set(prefixIndex: number, exp: Expression): Expression {\n        if (prefixIndex < 0 || prefixIndex >= this.size) {\n            return this;\n        }\n        if (prefixIndex === 0) {\n            return exp;\n        }\n        let nextRootIndex = prefixIndex - 1;\n        const newArgs: Expression[] = []\n        for(let arg of this.args) {\n            newArgs.push(arg.set(nextRootIndex, exp));\n            nextRootIndex -= arg.size;\n        }\n        return new Expression(this.type, this.name, List.of(...newArgs));\n    }\n\n    public randomSubExpression(): number {\n        return randomIntLessThan(this.size);\n    }\n\n    /**\n     * Choose a random node where each node is weighted by how many node pairs it is the nearest common ancestor of.\n     */\n    public randomSubExpressionAncestorWeighted(): number {\n        const exp1Index = randomIntLessThan(this.size);\n        const exp2Index = randomIntLessThan(this.size);\n        return this.nearestCommonAncestor(exp1Index, exp2Index)!;\n    }\n}\n\n","import {Scanner, Token, TokenType} from \"./scanner\";\nimport Expression from \"./expression\";\nimport {List} from \"immutable\";\n\n/**\n * Parse a string representing an expression into an Expression AST.\n *\n * Grammar:\n * Expression -> (Expression)\n * Expression -> TERMINAL ArgList\n * ArgList -> Expression ArgList\n * ArgList -> _\n *\n * Each TERMINAL token represents either an Operator with a known number of arguments, a variable, or a constant value.\n */\nexport function parse(str: string): Expression {\n    const scan: Scanner = new Scanner(str);\n    const exp = parseExpression(scan);\n    expectEnd(scan);\n    return exp;\n}\n\nfunction expectEnd(scan: Scanner): void {\n    const nextToken = scan.nextToken();\n    if (nextToken !== undefined) {\n        throw Error(`Parse error: Expected end of expression, found \"${nextToken.val}\"`);\n    }\n}\n\nfunction expectAndConsume(scan: Scanner, tokenType: TokenType): void {\n    const tok = scan.nextToken();\n    if (tok === undefined) {\n        throw Error(`Parse error: Expected token of type ${tokenType}, found none.`)\n    } else if (tok.type !== tokenType) {\n        throw Error(`Parse error: Expected token of type ${tokenType}, found token of type ${tok.type}.`)\n    }\n}\n\nfunction parseExpression(scan: Scanner): Expression {\n    const firstToken = scan.nextToken();\n    if (firstToken === undefined) {\n        throw Error(`Parse error: Expected expression, found none.`);\n    } else if (firstToken.type === TokenType.PAREN_OPEN) { // Expression -> (Expression)\n        const exp = parseExpression(scan);\n        expectAndConsume(scan, TokenType.PAREN_CLOSE);\n        return exp;\n    } else if (firstToken.type === TokenType.TERMINAL) { // Expression -> TERMINAL ArgList\n        return parseTerminalAndArgList(firstToken, scan);\n    }\n    throw Error(`Parse error: Unexpected token: ${firstToken}.`);\n}\n\nfunction parseTerminalAndArgList(token: Token, scan: Scanner): Expression {\n    if (token.type !== TokenType.TERMINAL || !token.terminalMetadata) {\n        throw Error(`Parse error: Invalid TERMINAL token ${token}`);\n    }\n\n    // ArgList -> Expression ArgList\n    // ArgList -> _\n    const args = [];\n    for (let i = 0; i < token.terminalMetadata.numArgs; i++) {\n        args.push(parseExpression(scan));\n    }\n    return new Expression(\n        token.terminalMetadata.type,\n        token.val,\n        List.of(...args));\n}\n","import {TerminalMetadata, TERMINALS, TerminalType} from \"./terminals\";\nimport {List} from \"immutable\";\nimport Expression from \"./expression\";\n\nexport function randomConst(min: number, max: number): Expression {\n    const val = Math.random()*Math.abs(max - min) + Math.min(min, max);\n    return new Expression(TerminalType.CONST, val.toString(), List.of());\n}\n\nconst ZERO_ARG_TERMINALS = TERMINALS.filter(term => term.numArgs === 0);\nconst NON_ZERO_ARG_TERMINALS = TERMINALS.filter(term => term.numArgs !== 0);\n\nexport function randomExpression(maxDepth: number): Expression {\n    if (maxDepth <= 0) {\n        throw new Error(\"Invalid random expression depth.\");\n    }\n    let randomTerminal: TerminalMetadata;\n    if (maxDepth === 1) {\n        randomTerminal = ZERO_ARG_TERMINALS.get(Math.floor(Math.random()*ZERO_ARG_TERMINALS.size))!;\n    } else {\n        randomTerminal = NON_ZERO_ARG_TERMINALS.get(Math.floor(Math.random()*NON_ZERO_ARG_TERMINALS.size))!;\n    }\n    if (randomTerminal.tokenLiteral === undefined) {\n        return randomConst(-10, 10);\n    }\n    const args: Expression[] = [];\n    for (let i = 0; i < randomTerminal.numArgs; i++) {\n        args.push(randomExpression(maxDepth - 1));\n    }\n    return new Expression(randomTerminal.type, randomTerminal.tokenLiteral, List.of(...args));\n}","import Expression from \"./expression\";\n\nexport function cross(exp1: Expression, exp2: Expression): Expression {\n    const sub1 = exp1.randomSubExpressionAncestorWeighted();\n    const sub2 = exp2.randomSubExpressionAncestorWeighted();\n    return exp1.set(sub1, exp2.get(sub2)!);\n}","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {parse} from \"../expressions/parser\";\nimport Expression, {} from \"../expressions/expression\";\nimport {randomExpression} from \"../expressions/generator\";\nimport {cross} from \"../expressions/evolve\";\n\nexport interface ArtState {\n    index: number;\n    selected: boolean;\n    textSource: string;\n}\n\nexport interface GenerationState {\n    pieces: ArtState[]\n}\n\nconst createArt = (index: number, textSource: string) => {\n    return {\n        index,\n        selected: false,\n        textSource,\n    }\n};\n\nconst GENERATION_SIZE = 12;\n\nconst createFirstGeneration = () => {\n    const pieces: ArtState[] = [];\n    for (let i = 0; i < GENERATION_SIZE; i++) {\n        pieces.push(createArt(i, randomExpression(5).toString()));\n    }\n    console.log(pieces);\n    return {\n        pieces\n    };\n}\nconst createNextGeneration = (prevGeneration: GenerationState) => {\n    console.log(\"STARTING\");\n    const selected: Expression[] = prevGeneration.pieces.filter(art => art.selected)\n        .map(art => {\n            try {\n                return parse(art.textSource)\n            } catch (e) {\n                return undefined\n            }\n        })\n        .filter(exp => exp !== undefined)\n        .map(exp => exp!);\n    if (selected.length === 0) {\n        throw new Error(\"No parents selected\");\n    }\n    const children: ArtState[] = [];\n    for (let i = 0; i < GENERATION_SIZE; i++) {\n        const parent1 = selected[Math.floor(Math.random() * selected.length)];\n        const parent2 = selected[Math.floor(Math.random() * selected.length)];\n        let child = cross(parent1, parent2);\n        // 1 to 5 mutations\n        // for (let m = 0; m < Math.floor(Math.random()*5) + 1; m++) {\n        //     child = mutate(child);\n        // }\n        children.push(createArt(i, child.toString()));\n    }\n\n    return {\n        pieces: children\n    };\n}\n\nexport interface SelectActionPayload {\n    index: number;\n}\n\nexport interface EditActionPayload {\n    index: number;\n    newSource: string;\n}\n\nexport const artSlice = createSlice({\n    name: 'art',\n    initialState: createFirstGeneration() as GenerationState,\n    reducers: {\n        random: (state) => createFirstGeneration(),\n        nextGeneration: (state) => {try {return createNextGeneration(state);} catch(e) {return state;}},\n        edit: (state, event: PayloadAction<EditActionPayload>) => {\n            state.pieces[event.payload.index].textSource = event.payload.newSource;\n        },\n        toggleSelected: (state, event: PayloadAction<SelectActionPayload>) => {\n            state.pieces[event.payload.index].selected = !state.pieces[event.payload.index].selected;\n        }\n    }\n})\n\nexport const {random, nextGeneration, edit, toggleSelected} = artSlice.actions\nexport const selectedPieces = (state: { art: GenerationState }) => state.art.pieces;\n\nexport default artSlice.reducer","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport defaultVert from \"!raw-loader!../expressions/glsl/default.vert\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport defaultFrag from \"!raw-loader!../expressions/glsl/default.frag\";\n\nfunction createShader(\n    gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader | null {\n    console.log(source);\n    const shader: WebGLShader = gl.createShader(type)!;\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success: boolean = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.error(`Failed to compile ${type === gl.FRAGMENT_SHADER ? \"FRAGMENT_SHADER\" : (type\n    === gl.VERTEX_SHADER\n        ? \"VERTEX_SHADER\" : \"UNKNOWN SHADER TYPE\")}:`);\n    console.error(source);\n    console.error(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n    return null;\n}\n\nexport function createProgram(\n    gl: WebGLRenderingContext, fragmentShaderSrc?: string, vertexShaderSrc?: string): WebGLProgram | null {\n    const program: WebGLProgram = gl.createProgram()!;\n    const vertexShader: WebGLShader | null = createShader(gl, gl.VERTEX_SHADER, vertexShaderSrc ? vertexShaderSrc : defaultVert);\n    const fragmentShader: WebGLShader | null = createShader(\n        gl, gl.FRAGMENT_SHADER, fragmentShaderSrc ? fragmentShaderSrc : defaultFrag);\n\n    if (!vertexShader || !fragmentShader) {\n        gl.deleteProgram(program);\n        return null;\n    }\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.error(`Failed to create GL program:`);\n    console.error(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n    return null;\n}","export default \"precision highp float;\\n\\nattribute vec2 xy_pos;\\nvarying vec2 pos;\\nvoid main() {\\n    pos = xy_pos;\\n    gl_Position = vec4(xy_pos, 0, 1);\\n}\";","export default \"precision highp float;\\n\\nvoid main() {\\n    gl_FragColor = vec4(1, 0, 1, 1);\\n}\";","import {useCallback, useEffect, useRef, useState} from \"react\";\nimport {emitGlsl} from \"../expressions/glslEmitter\";\nimport {createProgram} from \"../gl/glUtils\";\nimport {parse} from \"../expressions/parser\";\n\nexport default function Art(props: {\n    readonly src: string;\n    readonly periodSeconds: number;\n}) {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const glProgram = useRef<WebGLProgram | null>(null);\n    const [time, setTime] = useState<number>(0);\n\n    // Set up OpenGL.\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        const gl: WebGLRenderingContext = canvas.getContext(\"webgl\")!;\n\n        const positionBuffer = gl.createBuffer();\n        const vertices = new Float32Array([\n            -1.0, 1.0,\n            -1.0, -1.0,\n            1.0, 1.0,\n            1.0, -1.0\n        ]);\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    }, []);\n\n    // Recompile the program when expression changes.\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        const gl: WebGLRenderingContext = canvas.getContext(\"webgl\")!;\n        try {\n            const expr = parse(props.src);\n            const fragSrc = emitGlsl(expr);\n            glProgram.current = createProgram(gl, fragSrc);\n        } catch (e) {\n            console.error(e);\n            glProgram.current = createProgram(gl);\n        }\n        gl.useProgram(glProgram.current);\n\n        const positionLoc = gl.getAttribLocation(glProgram.current!, \"xy_pos\");\n        gl.vertexAttribPointer(positionLoc, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(positionLoc);\n\n    }, [props.src]);\n\n\n    // Update time callback.\n    const animationRequest = useRef(0);\n    const startTime = useRef(0);\n    const update = useCallback(() => {\n        const t = (performance.now() - startTime.current) / 1000;\n        setTime((t % props.periodSeconds) / props.periodSeconds);\n        animationRequest.current = requestAnimationFrame(update);\n    }, [props.periodSeconds]);\n\n    // Start timer.\n    useEffect(() => {\n        startTime.current = performance.now();\n        animationRequest.current = requestAnimationFrame(update);\n        return () => {\n            cancelAnimationFrame(animationRequest.current);\n        };\n    }, [props.src, props.periodSeconds, update]);\n\n    // Render on time passing or recompile.\n    useEffect(() => {\n        if (glProgram === undefined) {\n            return;\n        }\n        const canvas = canvasRef.current!;\n        const gl: WebGLRenderingContext = canvas.getContext(\"webgl\")!;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        const glUniformTime = gl.getUniformLocation(glProgram.current!, \"time\");\n        gl.uniform1f(glUniformTime, time);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }, [props.src, time]);\n\n    return (<div className=\"Art\">\n        <canvas ref={canvasRef}/>\n    </div>);\n}\n\nArt.defaultProps = {\n    expr: undefined,\n    periodSeconds: 5,\n}","export default \"#define F_PI 3.14159\\n#define F_TAU 6.28318\\n#define F_E 2.71828\\n#define F_PHI 1.61803\\n\\n#define PI vec3(F_PI, F_PI, F_PI)\\n#define TAU vec3(F_TAU, F_TAU, F_TAU)\\n#define E vec3(F_E, F_E, F_E)\\n#define PHI vec3(F_PHI, F_PHI, F_PHI)\\n\\nprecision highp float;\\n\\n// (x, y) coordinates expected to be varying from [-1, 1]\\nvarying vec2 pos;\\n// time expected to be varying from [0, 1]\\nuniform float time;\\n\\nvec3 expression(vec3 x, vec3 y, vec3 t);\\n\\nvec3 inv(vec3 v) {\\n    return -v;\\n}\\n\\nvec3 dotp(vec3 a, vec3 b) {\\n    return vec3(dot(a, b));\\n}\\n\\nvec3 logb(vec3 x, vec3 b) {\\n    return log(x) / log(b);\\n}\\n\\nvec3 round(vec3 v) {\\n    return floor(0.5 + v);\\n}\\n\\nvec3 trunc(vec3 v) {\\n    return vec3(int(v.x), int(v.y), int(v.z));\\n}\\n\\nvec3 clip(vec3 v) {\\n    return max(min(v, 1.0), -1.0);\\n}\\n\\nvec3 wrap(vec3 v) {\\n    return mod(v + 1.0, vec3(3.0)) - 1.0;\\n}\\n\\nvec3 ushift(vec3 v) {\\n    return (v + 1.0) / 2.0;\\n}\\n\\n// fac * a + (1 - fac) * b\\n// TODO: Consider clipping fac to [0, 1]\\nvec3 blend(vec3 a, vec3 b, vec3 fac) {\\n    return (fac * a) + ((vec3(1.0) - fac) * b);\\n}\\n\\nvec3 rgb(vec3 r, vec3 g, vec3 b) {\\n    return vec3(r.x, g.x, b.x);\\n}\\n\\nvec3 bw(vec3 rgb) {\\n    return vec3(0.3 * rgb.x + 0.59 * rgb.y + 0.11 * rgb.z);\\n}\\n\\nvoid main() {\\n    vec3 x = vec3(pos.x);\\n    vec3 y = vec3(pos.y);\\n    vec3 t = vec3(time, time, time);\\n    vec3 rgb = expression(x, y, t);\\n    gl_FragColor = vec4(rgb, 1.0);\\n}\";","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {nextGeneration, random, selectedPieces, toggleSelected} from \"../state/artSlice\";\nimport Art from \"./Art\";\n\nexport default function Gallery(props: {}) {\n\n    const pieces = useSelector(selectedPieces);\n    const dispatch = useDispatch();\n\n    const canvases = pieces.map((piece, i) => {\n        return <div className={piece.selected ? \"Selected\" : \"Deselected\"}\n                    onClick={() => dispatch(toggleSelected({index: i}))}>\n            <Art src={piece.textSource}/>\n        </div>\n    });\n\n    return (<div className=\"Gallery\">\n            <div className=\"Instructions\">\n                <div>\n                    Select expressions you like by clicking on them. Press \"Next generation\" to breed the selected\n                    expressions together randomly.\n                    <br/>\n                    If you don't like any of the expressions then press \"Random\" to get new ones.\n                    <br/>\n                </div>\n\n            </div>\n            <div className=\"Controls\" style={{display: \"flex\"}}>\n                <button onClick={() => dispatch(random())}>Random</button>\n                <button onClick={() => dispatch(nextGeneration())}>Next generation</button>\n            </div>\n            <div className=\"GalleryFlow\" style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                {canvases}\n\n            </div>\n        </div>\n    );\n}","import {useState} from \"react\";\nimport Art from \"./Art\";\n\nexport default function Editor(props: { readonly initialSrc?: string }) {\n    const [src, setSrc] = useState(props.initialSrc);\n\n    return <div className=\"Editor\">\n        <Art src={src!}/>\n        <textarea rows={8} value={src} onChange={(e) => {\n            setSrc(e.target.value);\n        }\n        }/>\n    </div>\n}\n\nEditor.defaultProps = {\n    initialSrc: \"rgb x y t\",\n}","import Gallery from \"./Gallery\";\nimport React from \"react\";\nimport Editor from \"./Editor\";\n\nexport default function App() {\n    return (<div>\n        <Gallery />\n        <div>\n            You can write your own expression below. Unfortunately it isn't selectable yet.\n        </div>\n        {/*<Editor initialSrc={\"rgb\\n(* (% x t) x)\\n(% y t)\\n(* x y)\"}/>*/}\n        <Editor initialSrc={\"rgb % t % x y * t * x y / t / x y\"}/>\n        {/*<Editor initialSrc={\"rgb (* (* t x) y) (* (- 1 t) (- x y)) (* (- 0.5 t) (- 1 x))\"}/>*/}\n        {/*<Editor />*/}\n        <div>\n            <i>\"This art may not make sense to you. It makes Ness sleepy just thinking about it. Use Paralysis to knock some sense into the painting.\"</i>\n                <br />\n            — EarthBound Player's Guide\n        </div>\n        <br />\n        <div style={{color: \"yellow\"}}>\n            UX developer wanted :)\n        </div>\n        <div style={{color: \"blue\"}}>\n            <a href=\"https://github.com/mbh95/abstract-art\">GitHub repo</a>\n        </div>\n    </div>);\n}","import { configureStore } from '@reduxjs/toolkit'\nimport artReducer from './artSlice'\n\nexport default configureStore({\n    reducer: {\n        art: artReducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from \"./view/App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./state/store\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));"],"sourceRoot":""}