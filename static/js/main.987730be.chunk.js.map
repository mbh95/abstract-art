{"version":3,"sources":["state/gallerySlice.ts","expressions/terminals.ts","expressions/glslEmitter.ts","expressions/scanner.ts","math/random.ts","expressions/expression.ts","expressions/parser.ts","gl/glUtils.ts","view/Art.tsx","expressions/glsl/header.frag","expressions/glsl/default.vert","expressions/glsl/default.frag","expressions/generator.ts","expressions/evolve.ts","view/Gallery.tsx","view/App.tsx","state/store.ts","index.tsx"],"names":["createArtState","textSource","selected","TerminalType","gallerySlice","createSlice","name","initialState","art","settings","highDpiSupport","reducers","addArt","state","event","push","payload","newSource","editArt","index","setAllArt","newArt","deleteArt","splice","toggleSelected","updateSettings","newSettings","actions","selectArt","gallery","selectSettings","glslLiteral","literal","_exp","glslFn","fnName","exp","args","map","arg","emit","join","glslInfix","joiner","terminalMetadata","type","glslEmitter","TokenType","TERMINALS","List","of","CONST","numArgs","tokenRegExp","CONST_PI","tokenLiteral","CONST_TAU","CONST_E","CONST_PHI","VAR_X","VAR_Y","VAR_T","OP_INV","OP_ABS","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_DOT","OP_CROSS","OP_SQRT","OP_POW","OP_EXP","OP_LOG","OP_LN","OP_SIN","OP_COS","OP_TAN","OP_FLOOR","OP_CEIL","OP_ROUND","OP_TRUNC","OP_MIN","OP_MAX","OP_CLIP","OP_WRAP","OP_USHIFT","OP_BLEND","OP_V","OP_RGB","OP_BW","OP_NOISE2D","TERMINALS_MAP","toMap","mapKeys","key","val","LITERAL_TERMINALS","filter","_key","undefined","k","v","REGEXP_TERMINALS","op","get","terminalStrToToken","terminal","str","term","test","recognizeTerminal","TERMINAL","isWhitespace","s","isOpenParen","c","isCloseParen","Scanner","input","this","length","charAt","Error","nextChar","tokBuf","skipWhitespace","PAREN_OPEN","PAREN_CLOSE","terminated","prevChar","randomInt","min","max","Math","floor","random","randomRange","randomIntLessThan","Expression","size","reduce","a","b","flatten","expr","mapFn","prefixIndex","nextRootIndex","offset","offsetConst","argPath","findPath","offsetSubpath","relative","prefixIndex1","prefixIndex2","path1","path2","j","i","concat","flatMap","newArgs","set","exp1Index","exp2Index","nearestCommonAncestor","parse","scan","parseExpression","nextToken","expectEnd","firstToken","tokenType","tok","expectAndConsume","token","parseTerminalAndArgList","createShader","gl","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","FRAGMENT_SHADER","VERTEX_SHADER","getShaderInfoLog","deleteShader","Art","props","frameRef","createRef","useState","glProgram","setGlProgram","useSelector","dispatch","useDispatch","getGlContext","getTime","useEffect","log","expression","fragSrc","fragmentShaderSrc","vertexShaderSrc","program","createProgram","vertexShader","fragmentShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","glCanvas","canvas","animationRequest","requestAnimationFrame","render","current","rect","getBoundingClientRect","bottom","top","clientHeight","right","left","clientWidth","width","height","pixelRatio","window","devicePixelRatio","viewport","scissor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","useProgram","glUniformTime","getUniformLocation","uniform1f","positionLoc","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","drawArrays","TRIANGLE_STRIP","cancelAnimationFrame","className","ref","onClick","TERMINAL_WEIGHTS","weight","cumulative","weights","cumulativeWeights","CUMULATIVE_TERMINAL_WEIGHTS","CUMULATIVE_TERMINAL_WEIGHTS_BY_ARITY","result","maxArity","tw","inaryWeights","cumulativeByArity","chooseWeighted","total","r","randomConst","abs","toString","randomExpression","maxDepth","randomTerminal","randomTerminalMetadata","cross","exp1","exp2","sub1","randomSubExpressionAncestorWeighted","sub2","mutate","newExp","replacement","replacementMeta","substitute","mapArgs","Gallery","time","useRef","frames","startTime","performance","now","positionBuffer","createBuffer","vertices","Float32Array","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","highDpi","displayWidth","displayHeight","needResize","resizeCanvasToDisplaySize","enable","CULL_FACE","DEPTH_TEST","SCISSOR_TEST","style","transform","scrollY","scrollX","display","generateRandomArt","selectedPieces","piece","parents","n","children","p1","p2","breed","flexWrap","frame","App","id","getContext","antialias","color","href","onChange","e","target","checked","htmlFor","configureStore","reducer","galleryReducer","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.987730be.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit'\n\nexport interface GalleryState {\n    art: ArtState[];\n    settings: SettingsState;\n}\n\nexport interface SettingsState {\n    highDpiSupport: boolean;\n}\n\nconst defaultSettings: SettingsState = {\n    highDpiSupport: true,\n};\n\nexport interface ArtState {\n    textSource: string;\n    selected: boolean;\n}\n\nexport function createArtState(textSource: string): ArtState {\n    return {\n        textSource,\n        selected: false,\n    }\n}\n\nexport interface AddArtActionPayload {\n    newSource: string;\n}\n\nexport interface EditArtActionPayload {\n    index: number;\n    newSource: string;\n}\n\nexport interface SetAllArtActionPayload {\n    newArt: ArtState[];\n}\n\nexport interface DeleteArtActionPayload {\n    index: number;\n}\n\nexport interface SelectArtActionPayload {\n    index: number;\n}\n\nexport interface UpdateSettingsActionPayload {\n    newSettings: SettingsState;\n}\n\nexport const gallerySlice = createSlice({\n    name: 'gallery',\n    initialState: {art: [] as ArtState[], settings: defaultSettings} as GalleryState,\n    reducers: {\n        addArt: (state, event: PayloadAction<AddArtActionPayload>) => {\n            state.art.push(createArtState(event.payload.newSource));\n        },\n        editArt: (state, event: PayloadAction<EditArtActionPayload>) => {\n            state.art[event.payload.index].textSource = event.payload.newSource;\n        },\n        setAllArt: (state, event: PayloadAction<SetAllArtActionPayload>) => {\n            state.art = event.payload.newArt;\n        },\n        deleteArt: (state, event: PayloadAction<DeleteArtActionPayload>) => {\n            state.art.splice(event.payload.index, 1);\n        },\n        toggleSelected: (state, event: PayloadAction<SelectArtActionPayload>) => {\n            state.art[event.payload.index].selected = !state.art[event.payload.index].selected;\n        },\n        updateSettings: (state, event: PayloadAction<UpdateSettingsActionPayload>) => {\n          state.settings = event.payload.newSettings;\n        },\n    }\n})\n\nexport const {addArt, editArt, setAllArt, deleteArt, toggleSelected, updateSettings} = gallerySlice.actions\nexport const selectArt = (state: { gallery: GalleryState }) => state.gallery.art;\nexport const selectSettings = (state: { gallery: GalleryState }) => state.gallery.settings;\n\nexport default gallerySlice.reducer","import {List, Map} from \"immutable\";\nimport {glslFn, glslInfix, glslLiteral} from \"./glslEmitter\";\nimport Expression from \"./expression\";\n\nexport enum TerminalType {\n    CONST = \"CONST\",\n    CONST_PI = \"CONST_PI\",\n    CONST_TAU = \"CONST_TAU\",\n    CONST_E = \"CONST_E\",\n    CONST_PHI = \"CONST_PHI\",\n\n    VAR_X = \"VAR_X\",\n    VAR_Y = \"VAR_Y\",\n    VAR_T = \"VAR_T\",\n\n    OP_INV = \"OP_INV\",\n    OP_ABS = \"OP_ABS\",\n\n    OP_ADD = \"OP_ADD\",\n    OP_SUB = \"OP_SUB\",\n    OP_MUL = \"OP_MUL\",\n    OP_DIV = \"OP_DIV\",\n    OP_MOD = \"OP_MOD\",\n\n\n    OP_DOT = \"OP_DOT\",\n    OP_CROSS = \"OP_CROSS\",\n\n    OP_SQRT = \"OP_SQRT\",\n    OP_POW = \"OP_POW\",\n    OP_EXP = \"OP_EXP\",\n    OP_LOG = \"OP_LOG\",\n    OP_LN = \"OP_LN\",\n\n    OP_SIN = \"OP_SIN\",\n    OP_COS = \"OP_COS\",\n    OP_TAN = \"OP_TAN\",\n\n    OP_FLOOR = \"OP_FLOOR\",\n    OP_CEIL = \"OP_CEIL\",\n    OP_ROUND = \"OP_ROUND\",\n    OP_TRUNC = \"OP_TRUNC\",\n\n    OP_MIN = \"OP_MIN\",\n    OP_MAX = \"OP_MAX\",\n\n    OP_CLIP = \"OP_CLIP\",\n    OP_WRAP = \"OP_WRAP\",\n    OP_USHIFT = \"OP_USHIFT\",\n\n    OP_BLEND = \"OP_BLEND\",\n\n    OP_V = \"OP_V\",\n    OP_RGB = \"OP_RGB\",\n    OP_BW = \"OP_BW\",\n\n    OP_NOISE2D = \"OP_NOISE2D\",\n}\n\nexport interface TerminalMetadata {\n    readonly type: TerminalType;\n    readonly numArgs: number;\n    readonly tokenLiteral?: string;\n    readonly tokenRegExp?: RegExp;\n    readonly glslEmitter: (exp: Expression) => string;\n}\n\nexport const TERMINALS: List<TerminalMetadata> = List.of<TerminalMetadata>(\n    {\n        type: TerminalType.CONST,\n        numArgs: 0,\n        tokenRegExp: /^-?\\d+(\\.\\d+)?$/,\n        glslEmitter: (exp) => `vec3(${exp.name}, ${exp.name}, ${exp.name})`\n    },\n    {type: TerminalType.CONST_PI, numArgs: 0, tokenLiteral: \"pi\", glslEmitter: glslLiteral(\"PI\")},\n    {type: TerminalType.CONST_TAU, numArgs: 0, tokenLiteral: \"tau\", glslEmitter: glslLiteral(\"TAU\")},\n    {type: TerminalType.CONST_E, numArgs: 0, tokenLiteral: \"e\", glslEmitter: glslLiteral(\"E\")},\n    {type: TerminalType.CONST_PHI, numArgs: 0, tokenLiteral: \"phi\", glslEmitter: glslLiteral(\"PHI\")},\n    {type: TerminalType.VAR_X, numArgs: 0, tokenLiteral: \"x\", glslEmitter: glslLiteral(\"x\")},\n    {type: TerminalType.VAR_Y, numArgs: 0, tokenLiteral: \"y\", glslEmitter: glslLiteral(\"y\")},\n    {type: TerminalType.VAR_T, numArgs: 0, tokenLiteral: \"t\", glslEmitter: glslLiteral(\"t\")},\n    {type: TerminalType.OP_INV, numArgs: 1, tokenLiteral: \"inv\", glslEmitter: glslFn(\"inv\")},\n    {type: TerminalType.OP_ABS, numArgs: 1, tokenLiteral: \"abs\", glslEmitter: glslFn(\"abs\")},\n    {type: TerminalType.OP_ADD, numArgs: 2, tokenLiteral: \"+\", glslEmitter: glslInfix(\"+\")},\n    {type: TerminalType.OP_SUB, numArgs: 2, tokenLiteral: \"-\", glslEmitter: glslInfix(\"-\")},\n    {type: TerminalType.OP_MUL, numArgs: 2, tokenLiteral: \"*\", glslEmitter: glslInfix(\"*\")},\n    {type: TerminalType.OP_DIV, numArgs: 2, tokenLiteral: \"/\", glslEmitter: glslInfix(\"/\")},\n    {type: TerminalType.OP_MOD, numArgs: 2, tokenLiteral: \"%\", glslEmitter: glslFn(\"mod\")},\n    {type: TerminalType.OP_DOT, numArgs: 2, tokenLiteral: \"dot\", glslEmitter: glslFn(\"dotp\")},\n    {type: TerminalType.OP_CROSS, numArgs: 2, tokenLiteral: \"cross\", glslEmitter: glslFn(\"cross\")},\n    {type: TerminalType.OP_SQRT, numArgs: 1, tokenLiteral: \"sqrt\", glslEmitter: glslFn(\"sqrt\")},\n    {type: TerminalType.OP_POW, numArgs: 2, tokenLiteral: \"pow\", glslEmitter: glslFn(\"pow\")},\n    {type: TerminalType.OP_EXP, numArgs: 1, tokenLiteral: \"exp\", glslEmitter: glslFn(\"exp\")},\n    {type: TerminalType.OP_LOG, numArgs: 2, tokenLiteral: \"log\", glslEmitter: glslFn(\"logb\")},\n    {type: TerminalType.OP_LN, numArgs: 1, tokenLiteral: \"ln\", glslEmitter: glslFn(\"log\")},\n    {type: TerminalType.OP_SIN, numArgs: 1, tokenLiteral: \"sin\", glslEmitter: glslFn(\"sin\")},\n    {type: TerminalType.OP_COS, numArgs: 1, tokenLiteral: \"cos\", glslEmitter: glslFn(\"cos\")},\n    {type: TerminalType.OP_TAN, numArgs: 1, tokenLiteral: \"tan\", glslEmitter: glslFn(\"tan\")},\n    {type: TerminalType.OP_FLOOR, numArgs: 1, tokenLiteral: \"floor\", glslEmitter: glslFn(\"floor\")},\n    {type: TerminalType.OP_CEIL, numArgs: 1, tokenLiteral: \"ceil\", glslEmitter: glslFn(\"ceil\")},\n    {type: TerminalType.OP_ROUND, numArgs: 1, tokenLiteral: \"round\", glslEmitter: glslFn(\"round\")},\n    {type: TerminalType.OP_TRUNC, numArgs: 1, tokenLiteral: \"trunc\", glslEmitter: glslFn(\"trunc\")},\n    {type: TerminalType.OP_MIN, numArgs: 2, tokenLiteral: \"min\", glslEmitter: glslFn(\"min\")},\n    {type: TerminalType.OP_MAX, numArgs: 2, tokenLiteral: \"max\", glslEmitter: glslFn(\"max\")},\n    {type: TerminalType.OP_CLIP, numArgs: 1, tokenLiteral: \"clip\", glslEmitter: glslFn(\"clip\")},\n    {type: TerminalType.OP_WRAP, numArgs: 1, tokenLiteral: \"wrap\", glslEmitter: glslFn(\"wrap\")},\n    {type: TerminalType.OP_USHIFT, numArgs: 1, tokenLiteral: \"ushift\", glslEmitter: glslFn(\"ushift\")},\n    {type: TerminalType.OP_BLEND, numArgs: 3, tokenLiteral: \"blend\", glslEmitter: glslFn(\"blend\")},\n    {type: TerminalType.OP_V, numArgs: 3, tokenLiteral: \"v\", glslEmitter: glslFn(\"rgb\")},\n    {type: TerminalType.OP_RGB, numArgs: 3, tokenLiteral: \"rgb\", glslEmitter: glslFn(\"rgb\")},\n    {type: TerminalType.OP_BW, numArgs: 1, tokenLiteral: \"bw\", glslEmitter: glslFn(\"bw\")},\n    {type: TerminalType.OP_NOISE2D, numArgs: 2, tokenLiteral: \"noise2d\", glslEmitter: glslFn(\"snoise2d\")},\n\n);\nconst TERMINALS_MAP: Map<TerminalType, TerminalMetadata> = TERMINALS.toMap()\n    .mapKeys((key: number, val: TerminalMetadata) => val.type);\n\nconst LITERAL_TERMINALS: Map<string, TerminalMetadata> = TERMINALS_MAP\n    .filter((val: TerminalMetadata, _key: TerminalType) => (val.tokenLiteral !== undefined))\n    .mapKeys((k: TerminalType, v: TerminalMetadata) => v.tokenLiteral!);\n\nconst REGEXP_TERMINALS: List<TerminalMetadata> = TERMINALS.filter(op => op.tokenRegExp !== undefined);\n\nexport function terminalMetadata(type: TerminalType): TerminalMetadata | undefined {\n    return TERMINALS_MAP.get(type);\n}\n\nexport function recognizeTerminal(str: string): TerminalMetadata | undefined {\n    const term = LITERAL_TERMINALS.get(str);\n    if (term !== undefined) {\n        return term;\n    }\n    for (const term of REGEXP_TERMINALS) {\n        if (term.tokenRegExp!.test(str)) {\n            return term;\n        }\n    }\n}","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport header from \"!raw-loader!./glsl/header.frag\";\nimport Expression from \"./expression\";\nimport {terminalMetadata} from \"./terminals\";\n\nexport function glslLiteral(literal: string): (exp: Expression) => string {\n    return (_exp) => literal;\n}\n\nexport function glslFn(fnName: string): (exp: Expression) => string {\n    return (exp: Expression) => `${fnName}(${exp.args.map(arg => emit(arg)).join(\", \")})`;\n}\n\nexport function glslInfix(joiner: string): (exp: Expression) => string {\n    return ((exp: Expression) => `(${exp.args.map(arg => emit(arg)).join(joiner)})`);\n}\n\nfunction emit(exp: Expression): string {\n    return terminalMetadata(exp.type)!.glslEmitter(exp);\n}\n\nexport function emitGlsl(exp: Expression): string {\n    return header + `\nvec3 expression(vec3 x, vec3 y, vec3 t) {\n    return ${emit(exp)};\n}\n`;\n}","import {recognizeTerminal, TerminalMetadata} from \"./terminals\";\n\nexport enum TokenType {\n    PAREN_OPEN = \"PAREN_OPEN\",\n    PAREN_CLOSE = \"PAREN_CLOSE\",\n    TERMINAL = \"TERMINAL\",\n}\n\nexport interface Token {\n    readonly type: TokenType;\n    readonly val: string;\n    readonly terminalMetadata?: TerminalMetadata;\n}\n\n/**\n * Convert the string representation of a single token of type OP into a Token.\n * Returns undefined if the string does not represent a valid OP token.\n */\nfunction terminalStrToToken(terminal: string): Token | undefined {\n    const terminalMetadata: TerminalMetadata | undefined = recognizeTerminal(terminal);\n    if (terminalMetadata) {\n        return {\n            type: TokenType.TERMINAL,\n            val: terminal,\n            terminalMetadata,\n        }\n    }\n}\n\nfunction isWhitespace(s: string): boolean {\n    return /^\\s+$/.test(s);\n}\n\nfunction isOpenParen(c: string): boolean {\n    return c === \"(\";\n}\n\nfunction isCloseParen(c: string): boolean {\n    return c === \")\";\n}\n\nfunction isParen(c: string): boolean {\n    return isOpenParen(c) || isCloseParen(c);\n}\n\nexport class Scanner {\n    readonly input: string;\n\n    private index: number;\n\n    constructor(input: string) {\n        this.input = input;\n        this.index = 0;\n    }\n\n    /**\n     * Move the scanner forward by one character. Returns the new character or undefined if no more characters.\n     */\n    private nextChar(): string | undefined {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input.charAt(this.index++);\n    }\n\n    /**\n     * Move the scanner backward by one character.\n     */\n    private prevChar(): void {\n        if (this.index <= 0) {\n            throw Error(`Scan error: prevChar() attempted on scanner at index ${this.index}.`)\n        }\n        this.index--;\n    }\n\n    /**\n     * Move the scanner forward until we get to the next non-whitespace char or the end of the string. Returns the new character or undefined if no more characters.\n     */\n    private skipWhitespace(): string | undefined {\n        let c: string | undefined;\n        do {\n            c = this.nextChar();\n        } while (c !== undefined && isWhitespace(c));\n        return c;\n    }\n\n    /**\n     * Move the scanner forward by one token. Return the new token or undefined if no more tokens.\n     */\n    nextToken(): Token | undefined {\n        let tokBuf = this.skipWhitespace();\n        if (tokBuf === undefined) {\n            return undefined;\n        }\n        if (isOpenParen(tokBuf)) {\n            return {type: TokenType.PAREN_OPEN, val: \"(\"};\n        } else if (isCloseParen(tokBuf)) {\n            return {type: TokenType.PAREN_CLOSE, val: \")\"};\n        }\n        let terminated = false;\n        while (!terminated) {\n            const nextChar = this.nextChar();\n            if (nextChar === undefined || isWhitespace(nextChar)) {\n                terminated = true;\n                break;\n            } else if (isParen(nextChar)) {\n                // Rewind by one char because we need to tokenize the delimiter in the case of parentheses.\n                this.prevChar();\n                terminated = true;\n                break;\n            } else {\n                tokBuf += nextChar;\n            }\n        }\n        return terminalStrToToken(tokBuf);\n    }\n}\n","export function randomRange(min: number, max: number): number {\n    if (max < min) {\n        throw new Error(`Invalid range [${min}, ${max})`);\n    }\n    return min + Math.random() * (max - min);\n}\n\nexport function randomInt(min: number, max: number): number {\n    return Math.floor(randomRange(Math.floor(min), Math.floor(max)));\n}\n\nexport function randomIntLessThan(max: number): number {\n    return randomInt(0, max);\n}","import {TerminalType} from \"./terminals\";\nimport {List} from \"immutable\";\nimport {randomIntLessThan} from \"../math/random\";\n\n/**\n * AST representation of an expression.\n *\n * There is no guarantee that each node in the tree is a unique instance. That is why it is necessary to refer to nodes\n * by prefix index relative to some ancestor node.\n */\nexport default class Expression {\n    readonly type: TerminalType;\n    readonly name: string;\n    readonly args: List<Expression>;\n    readonly size: number; // total number of nodes in subtree rooted at this expression.\n\n    constructor(type: TerminalType, name: string, args: List<Expression>) {\n        this.type = type;\n        this.name = name;\n        this.args = args;\n        this.size = args.map(arg => arg.size)\n            .reduce((a, b) => a + b, 1);\n    }\n\n    public toString(): string {\n        return this.flatten().map(expr => expr.name).join(\" \");\n    }\n\n    public mapArgs(mapFn: (arg: Expression) => Expression): Expression {\n        return new Expression(this.type, this.name, this.args.map((arg) => mapFn(arg)));\n    }\n\n    public findPath(prefixIndex: number): number[] | undefined {\n        if (prefixIndex < 0 || prefixIndex >= this.size) {\n            return undefined;\n        }\n        if (prefixIndex === 0) {\n            return [0];\n        }\n        let nextRootIndex = prefixIndex - 1;\n        let offset = 1;\n        for (let arg of this.args) {\n            const offsetConst = offset; // Ref in lambda below needs to be const.\n            const argPath = arg.findPath(nextRootIndex);\n            if (argPath !== undefined) {\n                const offsetSubpath = argPath.map(relative => relative + offsetConst);\n                return [0, ...offsetSubpath];\n            }\n            nextRootIndex -= arg.size;\n            offset += arg.size;\n        }\n        return undefined;\n    }\n\n    public nearestCommonAncestor(prefixIndex1: number, prefixIndex2: number): number | undefined {\n        const path1 = this.findPath(prefixIndex1);\n        const path2 = this.findPath(prefixIndex2);\n        if (path1 === undefined || path2 === undefined) {\n            return undefined;\n        }\n        let j = path2.length - 1;\n        for (let i = path1.length - 1; i >= 0; i--) {\n            while (j > 0 && path2[j] > path1[i]) {\n                j--;\n            }\n            if (path1[i] === path2[j]) {\n                return path1[i];\n            }\n        }\n        return 0;\n    }\n\n    public flatten(): List<Expression> {\n        return List.of<Expression>(this)\n            .concat(this.args.flatMap((expr) => expr.flatten()));\n    }\n\n    public get(prefixIndex: number): Expression | undefined {\n        return this.flatten().get(prefixIndex);\n    }\n\n    public set(prefixIndex: number, exp: Expression): Expression {\n        if (prefixIndex < 0 || prefixIndex >= this.size) {\n            return this;\n        }\n        if (prefixIndex === 0) {\n            return exp;\n        }\n        let nextRootIndex = prefixIndex - 1;\n        const newArgs: Expression[] = []\n        for(let arg of this.args) {\n            newArgs.push(arg.set(nextRootIndex, exp));\n            nextRootIndex -= arg.size;\n        }\n        return new Expression(this.type, this.name, List.of(...newArgs));\n    }\n\n    public randomSubExpression(): number {\n        return randomIntLessThan(this.size);\n    }\n\n    /**\n     * Choose a random node where each node is weighted by how many node pairs it is the nearest common ancestor of.\n     */\n    public randomSubExpressionAncestorWeighted(): number {\n        const exp1Index = randomIntLessThan(this.size);\n        const exp2Index = randomIntLessThan(this.size);\n        return this.nearestCommonAncestor(exp1Index, exp2Index)!;\n    }\n}\n\n","import {Scanner, Token, TokenType} from \"./scanner\";\nimport Expression from \"./expression\";\nimport {List} from \"immutable\";\n\n/**\n * Parse a string representing an expression into an Expression AST.\n *\n * Grammar:\n * Expression -> (Expression)\n * Expression -> TERMINAL ArgList\n * ArgList -> Expression ArgList\n * ArgList -> _\n *\n * Each TERMINAL token represents either an Operator with a known number of arguments, a variable, or a constant value.\n */\nexport function parse(str: string): Expression {\n    const scan: Scanner = new Scanner(str);\n    const exp = parseExpression(scan);\n    expectEnd(scan);\n    return exp;\n}\n\nfunction expectEnd(scan: Scanner): void {\n    const nextToken = scan.nextToken();\n    if (nextToken !== undefined) {\n        throw Error(`Parse error: Expected end of expression, found \"${nextToken.val}\"`);\n    }\n}\n\nfunction expectAndConsume(scan: Scanner, tokenType: TokenType): void {\n    const tok = scan.nextToken();\n    if (tok === undefined) {\n        throw Error(`Parse error: Expected token of type ${tokenType}, found none.`)\n    } else if (tok.type !== tokenType) {\n        throw Error(`Parse error: Expected token of type ${tokenType}, found token of type ${tok.type}.`)\n    }\n}\n\nfunction parseExpression(scan: Scanner): Expression {\n    const firstToken = scan.nextToken();\n    if (firstToken === undefined) {\n        throw Error(`Parse error: Expected expression, found none.`);\n    } else if (firstToken.type === TokenType.PAREN_OPEN) { // Expression -> (Expression)\n        const exp = parseExpression(scan);\n        expectAndConsume(scan, TokenType.PAREN_CLOSE);\n        return exp;\n    } else if (firstToken.type === TokenType.TERMINAL) { // Expression -> TERMINAL ArgList\n        return parseTerminalAndArgList(firstToken, scan);\n    }\n    throw Error(`Parse error: Unexpected token: ${firstToken}.`);\n}\n\nfunction parseTerminalAndArgList(token: Token, scan: Scanner): Expression {\n    if (token.type !== TokenType.TERMINAL || !token.terminalMetadata) {\n        throw Error(`Parse error: Invalid TERMINAL token ${token}`);\n    }\n\n    // ArgList -> Expression ArgList\n    // ArgList -> _\n    const args = [];\n    for (let i = 0; i < token.terminalMetadata.numArgs; i++) {\n        args.push(parseExpression(scan));\n    }\n    return new Expression(\n        token.terminalMetadata.type,\n        token.val,\n        List.of(...args));\n}\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport defaultVert from \"!raw-loader!../expressions/glsl/default.vert\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport defaultFrag from \"!raw-loader!../expressions/glsl/default.frag\";\n\nfunction createShader(\n    gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader | null {\n    // console.log(source);\n    const shader: WebGLShader = gl.createShader(type)!;\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success: boolean = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.error(`Failed to compile ${type === gl.FRAGMENT_SHADER ? \"FRAGMENT_SHADER\" : (type\n    === gl.VERTEX_SHADER\n        ? \"VERTEX_SHADER\" : \"UNKNOWN SHADER TYPE\")}:`);\n    console.error(source);\n    console.error(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n    return null;\n}\n\nexport function createProgram(\n    gl: WebGLRenderingContext, fragmentShaderSrc?: string, vertexShaderSrc?: string): WebGLProgram | null {\n    const program: WebGLProgram = gl.createProgram()!;\n    const vertexShader: WebGLShader | null = createShader(gl, gl.VERTEX_SHADER, vertexShaderSrc ? vertexShaderSrc : defaultVert);\n    const fragmentShader: WebGLShader | null = createShader(\n        gl, gl.FRAGMENT_SHADER, fragmentShaderSrc ? fragmentShaderSrc : defaultFrag);\n\n    if (!vertexShader || !fragmentShader) {\n        gl.deleteProgram(program);\n        return null;\n    }\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.error(`Failed to create GL program:`);\n    console.error(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n    return null;\n}","import {parse} from \"../expressions/parser\";\nimport {emitGlsl} from \"../expressions/glslEmitter\";\nimport {createProgram} from \"../gl/glUtils\";\nimport {createRef, useEffect, useState} from \"react\";\nimport {ArtState, selectSettings, toggleSelected} from \"../state/gallerySlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport default function Art(props: {\n    art: ArtState,\n    index: number,\n    getTime: () => number,\n    getGlContext: () => WebGLRenderingContext | null,\n}) {\n    const frameRef = createRef<HTMLDivElement>();\n    const [glProgram, setGlProgram] = useState<WebGLProgram | null>(null);\n    const settings = useSelector(selectSettings);\n    const dispatch = useDispatch();\n\n    const gl = props.getGlContext();\n    const source = props.art.textSource;\n    const getTime = props.getTime;\n\n    // Compile gl program.\n    useEffect(() => {\n        if (gl === null) {\n            return;\n        }\n        console.log(\"Recompiling...\");\n        const expression = parse(source)!;\n        const fragSrc = emitGlsl(expression);\n        setGlProgram(createProgram(gl, fragSrc));\n    }, [gl, source]);\n\n    // Start rendering\n    useEffect(() => {\n        if (gl === null) {\n            return;\n        }\n        const glCanvas = gl.canvas as HTMLCanvasElement;\n\n        let animationRequest = 0;\n        const render = () => {\n            if (frameRef.current === null) {\n                return;\n            }\n            const rect = frameRef.current!.getBoundingClientRect();\n            if (!(rect.bottom < 0 || rect.top > glCanvas.clientHeight ||\n                rect.right < 0 || rect.left > glCanvas.clientWidth)) {\n\n                const width = rect.right - rect.left;\n                const height = rect.bottom - rect.top;\n                const left = rect.left - 8;\n                const bottom = glCanvas.clientHeight - rect.bottom;\n                const pixelRatio = settings.highDpiSupport ? window.devicePixelRatio || 1 : 1;\n\n                gl.viewport(left * pixelRatio, bottom * pixelRatio, width * pixelRatio, height * pixelRatio);\n                gl.scissor(left * pixelRatio, bottom * pixelRatio, width * pixelRatio, height * pixelRatio);\n\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n                gl.useProgram(glProgram);\n\n                const glUniformTime = gl.getUniformLocation(glProgram!, \"time\");\n                gl.uniform1f(glUniformTime, getTime());\n\n                const positionLoc = gl.getAttribLocation(glProgram!, \"xy_pos\");\n                gl.vertexAttribPointer(positionLoc, 2, gl.FLOAT, false, 0, 0);\n                gl.enableVertexAttribArray(positionLoc);\n\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            }\n            animationRequest = requestAnimationFrame(render);\n        }\n        animationRequest = requestAnimationFrame(render);\n        return () => {\n            cancelAnimationFrame(animationRequest);\n        }\n    }, [settings.highDpiSupport, frameRef, gl, glProgram, getTime]);\n\n    return <div className={\"ArtFrame\" + (props.art.selected ? \" Selected\" : \" Deselected\")}>\n        <div ref={frameRef} className=\"ArtFrameClickTarget\"\n             onClick={() => dispatch(toggleSelected({index: props.index}))}/>\n    </div>\n}","export default \"#define F_PI 3.14159\\n#define F_TAU 6.28318\\n#define F_E 2.71828\\n#define F_PHI 1.61803\\n\\n#define PI vec3(F_PI, F_PI, F_PI)\\n#define TAU vec3(F_TAU, F_TAU, F_TAU)\\n#define E vec3(F_E, F_E, F_E)\\n#define PHI vec3(F_PHI, F_PHI, F_PHI)\\n\\nprecision highp float;\\n\\n// (x, y) coordinates expected to be varying from [-1, 1]\\nvarying vec2 pos;\\n// time expected to be varying from [0, 1]\\nuniform float time;\\n\\nfloat rand(vec2 c){\\n    return fract(sin(dot(c.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n    return mod289(((x*34.0)+10.0)*x);\\n}\\n\\nfloat snoise(vec2 v) {\\n    const vec4 C = vec4(0.211324865405187, // (3.0-sqrt(3.0))/6.0\\n    0.366025403784439, // 0.5*(sqrt(3.0)-1.0)\\n    -0.577350269189626, // -1.0 + 2.0 * C.x\\n    0.024390243902439);// 1.0 / 41.0\\n    // First corner\\n    vec2 i  = floor(v + dot(v, C.yy));\\n    vec2 x0 = v -   i + dot(i, C.xx);\\n\\n    // Other corners\\n    vec2 i1;\\n    //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n    //i1.y = 1.0 - i1.x;\\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n    // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n    // x1 = x0 - i1 + 1.0 * C.xx ;\\n    // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n    vec4 x12 = x0.xyxy + C.xxzz;\\n    x12.xy -= i1;\\n\\n    // Permutations\\n    i = mod289(i);// Avoid truncation effects in permutation\\n    vec3 p = permute(permute(i.y + vec3(0.0, i1.y, 1.0))\\n    + i.x + vec3(0.0, i1.x, 1.0));\\n\\n    vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);\\n    m = m*m;\\n    m = m*m;\\n\\n    // Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n    // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n    vec3 h = abs(x) - 0.5;\\n    vec3 ox = floor(x + 0.5);\\n    vec3 a0 = x - ox;\\n\\n    // Normalise gradients implicitly by scaling m\\n    // Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\\n\\n    // Compute final noise value at P\\n    vec3 g;\\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n    return 130.0 * dot(m, g);\\n}\\n\\n// End Simplex noise from https://github.com/stegu/webgl-noise\\n\\nvec3 snoise2d(vec3 a, vec3 b) {\\n    return vec3(snoise(vec2(a.x, b.x)), snoise(vec2(a.y, b.y)), snoise(vec2(a.z, b.z)));\\n}\\n\\nvec3 expression(vec3 x, vec3 y, vec3 t);\\n\\nvec3 inv(vec3 v) {\\n    return -v;\\n}\\n\\nvec3 dotp(vec3 a, vec3 b) {\\n    return vec3(dot(a, b));\\n}\\n\\nvec3 logb(vec3 x, vec3 b) {\\n    return log(x) / log(b);\\n}\\n\\nvec3 round(vec3 v) {\\n    return floor(0.5 + v);\\n}\\n\\nvec3 trunc(vec3 v) {\\n    return vec3(int(v.x), int(v.y), int(v.z));\\n}\\n\\nvec3 clip(vec3 v) {\\n    return max(min(v, 1.0), -1.0);\\n}\\n\\nvec3 wrap(vec3 v) {\\n    return mod(v + 1.0, vec3(3.0)) - 1.0;\\n}\\n\\nvec3 ushift(vec3 v) {\\n    return (v + 1.0) / 2.0;\\n}\\n\\n// fac * a + (1 - fac) * b\\n// TODO: Consider clipping fac to [0, 1]\\nvec3 blend(vec3 a, vec3 b, vec3 fac) {\\n    return (fac * a) + ((vec3(1.0) - fac) * b);\\n}\\n\\nvec3 rgb(vec3 r, vec3 g, vec3 b) {\\n    return vec3(r.x, g.x, b.x);\\n}\\n\\nvec3 bw(vec3 rgb) {\\n    return vec3(0.3 * rgb.x + 0.59 * rgb.y + 0.11 * rgb.z);\\n}\\n\\nvoid main() {\\n    vec3 x = vec3(pos.x);\\n    vec3 y = vec3(pos.y);\\n    vec3 t = vec3(time, time, time);\\n    vec3 rgb = expression(x, y, t);\\n    gl_FragColor = vec4(rgb, 1.0);\\n}\";","export default \"precision highp float;\\n\\nattribute vec2 xy_pos;\\nvarying vec2 pos;\\nvoid main() {\\n    pos = xy_pos;\\n    gl_Position = vec4(xy_pos, 0, 1);\\n}\";","export default \"precision highp float;\\n\\nvoid main() {\\n    gl_FragColor = vec4(1, 0, 1, 1);\\n}\";","import {terminalMetadata, TerminalType} from \"./terminals\";\nimport {List} from \"immutable\";\nimport Expression from \"./expression\";\n\nexport interface TerminalWeight {\n    readonly type: TerminalType;\n    readonly weight: number;\n}\n\nconst TERMINAL_WEIGHTS: TerminalWeight[] = [\n    {type: TerminalType.CONST, weight: 1},\n    {type: TerminalType.VAR_X, weight: 1},\n    {type: TerminalType.VAR_Y, weight: 1},\n    {type: TerminalType.VAR_T, weight: 2},\n\n    {type: TerminalType.OP_INV, weight: 1},\n    {type: TerminalType.OP_ABS, weight: 1},\n    {type: TerminalType.OP_ADD, weight: 1},\n    {type: TerminalType.OP_SUB, weight: 1},\n    {type: TerminalType.OP_MUL, weight: 1},\n    {type: TerminalType.OP_DIV, weight: 1},\n    {type: TerminalType.OP_MOD, weight: 1},\n    {type: TerminalType.OP_DOT, weight: 1},\n    {type: TerminalType.OP_CROSS, weight: 1},\n    {type: TerminalType.OP_SQRT, weight: 1},\n    {type: TerminalType.OP_POW, weight: 1},\n    {type: TerminalType.OP_EXP, weight: 1},\n    {type: TerminalType.OP_LOG, weight: 1},\n    {type: TerminalType.OP_LN, weight: 1},\n    {type: TerminalType.OP_SIN, weight: 1},\n    {type: TerminalType.OP_COS, weight: 1},\n    {type: TerminalType.OP_TAN, weight: 1},\n    {type: TerminalType.OP_FLOOR, weight: 1},\n    {type: TerminalType.OP_CEIL, weight: 1},\n    {type: TerminalType.OP_ROUND, weight: 1},\n    {type: TerminalType.OP_TRUNC, weight: 1},\n    {type: TerminalType.OP_MIN, weight: 1},\n    {type: TerminalType.OP_MAX, weight: 1},\n    {type: TerminalType.OP_CLIP, weight: 1},\n    {type: TerminalType.OP_WRAP, weight: 1},\n    {type: TerminalType.OP_USHIFT, weight: 1},\n    {type: TerminalType.OP_BLEND, weight: 1},\n    {type: TerminalType.OP_V, weight: 1},\n    {type: TerminalType.OP_RGB, weight: 2},\n    {type: TerminalType.OP_BW, weight: 1},\n\n    {type: TerminalType.OP_NOISE2D, weight: 2},\n];\n\nfunction cumulative(weights: TerminalWeight[]): TerminalWeight[] {\n    let cumulativeWeights = [weights[0]];\n    for (let i = 1; i < weights.length; i++) {\n        cumulativeWeights.push({type: weights[i].type, weight: cumulativeWeights[i - 1].weight + weights[i].weight});\n    }\n    return cumulativeWeights;\n}\n\nfunction cumulativeByArity(weights: TerminalWeight[]): TerminalWeight[][] {\n    if (weights.length === 0) {\n        return [[]];\n    }\n    let result = [];\n    const maxArity = Math.max(...weights.map((tw) => terminalMetadata(tw.type)!.numArgs));\n    for (let i = 0; i <= maxArity; i++) {\n        const inaryWeights = cumulative(TERMINAL_WEIGHTS\n            .filter((tw) => terminalMetadata(tw.type)?.numArgs === i));\n        result.push(inaryWeights);\n    }\n    return result;\n}\n\nexport const CUMULATIVE_TERMINAL_WEIGHTS = cumulative(TERMINAL_WEIGHTS);\nexport const CUMULATIVE_TERMINAL_WEIGHTS_BY_ARITY = cumulativeByArity(TERMINAL_WEIGHTS)\n\nexport function chooseWeighted(cumulativeWeights: TerminalWeight[]): TerminalType | undefined {\n    if (cumulativeWeights.length === 0) {\n        return undefined;\n    }\n    // TODO: Validate that we have a monotonically increasing distribution.\n    const total = cumulativeWeights[cumulativeWeights.length - 1].weight;\n    const r = Math.random() * total;\n    // TODO: Binary search.\n    for (let i = 0; i < cumulativeWeights.length; i++) {\n        if (r <= cumulativeWeights[i].weight) {\n            return cumulativeWeights[i].type\n        }\n    }\n    // Should never get here.\n    throw new Error(\"Whoops, fell through chooseWeighted.\");\n}\n\nexport function randomConst(min: number, max: number): Expression {\n    const val = Math.random() * Math.abs(max - min) + Math.min(min, max);\n    return new Expression(TerminalType.CONST, val.toString(), List.of());\n}\n\nexport function randomExpression(maxDepth: number): Expression {\n    if (maxDepth <= 0) {\n        throw new Error(\"Invalid random expression depth.\");\n    }\n    let randomTerminal: TerminalType;\n    if (maxDepth === 1) {\n        randomTerminal = chooseWeighted(CUMULATIVE_TERMINAL_WEIGHTS_BY_ARITY[0])!;\n    } else {\n        randomTerminal = chooseWeighted(CUMULATIVE_TERMINAL_WEIGHTS)!;\n    }\n    const randomTerminalMetadata = terminalMetadata(randomTerminal)!;\n    if (randomTerminalMetadata.tokenLiteral === undefined) {\n        return randomConst(-10, 10);\n    }\n    const args: Expression[] = [];\n    for (let i = 0; i < randomTerminalMetadata.numArgs; i++) {\n        args.push(randomExpression(maxDepth - 1));\n    }\n    return new Expression(randomTerminal, randomTerminalMetadata.tokenLiteral, List.of(...args));\n}","import Expression from \"./expression\";\nimport {randomIntLessThan} from \"../math/random\";\nimport {terminalMetadata} from \"./terminals\";\nimport {chooseWeighted, CUMULATIVE_TERMINAL_WEIGHTS_BY_ARITY, randomConst} from \"./generator\";\n\nexport function breed(parents: Expression[], n = -1): Expression[] {\n    if (n < 0) {\n        n = parents.length;\n    }\n    let children = [];\n    for (let i = 0; i < n; i++) {\n        const p1 = parents[randomIntLessThan(parents.length)];\n        const p2 = parents[randomIntLessThan(parents.length)];\n        children.push(mutate(cross(p1, p2)));\n    }\n    return children;\n}\n\nexport function cross(exp1: Expression, exp2: Expression): Expression {\n    const sub1 = exp1.randomSubExpressionAncestorWeighted();\n    const sub2 = exp2.randomSubExpressionAncestorWeighted();\n    return exp1.set(sub1, exp2.get(sub2)!);\n}\n\nfunction substitute(exp: Expression): Expression {\n    const replacement = chooseWeighted(CUMULATIVE_TERMINAL_WEIGHTS_BY_ARITY[exp.args.size]);\n    if (replacement === undefined) {\n        return exp;\n    }\n    const replacementMeta = terminalMetadata(replacement)!;\n    if (replacementMeta.numArgs !== exp.args.size ) {\n        throw new Error(\"Arity mismatch during substitution mutation.\");\n    }\n    // TODO: Handle this better.\n    if (replacementMeta.tokenLiteral === undefined) {\n        return randomConst(-10, 10);\n    }\n    return new Expression(replacement, replacementMeta.tokenLiteral, exp.args);\n}\n\nexport function mutate(exp: Expression): Expression {\n    const r = Math.random();\n    let newExp = exp;\n    if (r < 0.99) { // none\n    } else if (r < 1.0) { // substitution\n        newExp = substitute(exp);\n    }\n    return newExp.mapArgs(mutate);\n}","import React, {useEffect, useRef} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {createArtState, selectArt, selectSettings, setAllArt} from \"../state/gallerySlice\";\nimport \"./Gallery.css\";\nimport {generateRandomArt} from \"./App\";\nimport Art from \"./Art\";\nimport {parse} from \"../expressions/parser\";\nimport {breed} from \"../expressions/evolve\";\n\nfunction resizeCanvasToDisplaySize(canvas: HTMLCanvasElement, highDpi: boolean): boolean {\n    const pixelRatio = highDpi ? window.devicePixelRatio || 1 : 1;\n    // Lookup the size the browser is displaying the canvas in CSS pixels.\n    const displayWidth = canvas.clientWidth * pixelRatio;\n    const displayHeight = canvas.clientHeight * pixelRatio;\n\n    // Check if the canvas is not the same size.\n    const needResize = canvas.width !== displayWidth ||\n        canvas.height !== displayHeight;\n\n    if (needResize) {\n        // Make the canvas the same size\n        canvas.width = displayWidth;\n        canvas.height = displayHeight;\n    }\n    return needResize;\n}\n\nexport default function Gallery(props: { getGlContext: () => WebGLRenderingContext | null }) {\n    const time = useRef<number>(0);\n    const settings = useSelector(selectSettings);\n    const art = useSelector(selectArt);\n    const frames = useSelector(selectArt)\n        .map((art, i) =>\n            <Art art={art}\n                 index={i}\n                 getTime={() => time.current}\n                 getGlContext={props.getGlContext}/>);\n\n    const dispatch = useDispatch();\n    const gl = props.getGlContext();\n    // Set up OpenGL.\n    useEffect(() => {\n        if (gl === null) {\n            return;\n        }\n        let animationRequest = 0;\n        const startTime = performance.now();\n        const glCanvas = gl.canvas as HTMLCanvasElement;\n        const render = () => {\n            time.current = (((performance.now() - startTime) / 1000) / 5) % 1;\n            resizeCanvasToDisplaySize(glCanvas, settings.highDpiSupport);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.DEPTH_TEST);\n            gl.enable(gl.SCISSOR_TEST);\n\n            // move the canvas to top of the current scroll position\n            (gl.canvas as HTMLCanvasElement).style.transform = `translateY(${window.scrollY}px) translateX(${window.scrollX}px)`;\n            animationRequest = requestAnimationFrame(render);\n        }\n        const positionBuffer = gl.createBuffer();\n        const vertices = new Float32Array([\n            -1.0, 1.0,\n            -1.0, -1.0,\n            1.0, 1.0,\n            1.0, -1.0\n        ]);\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n        animationRequest = requestAnimationFrame(render);\n        return () => {\n            cancelAnimationFrame(animationRequest);\n        }\n    }, [gl, settings.highDpiSupport]);\n\n    return (\n        <div className=\"Gallery\">\n            <div className=\"Instructions\">\n                <div>\n                    Select expressions you like by clicking on them. Press \"Breed selected\" to breed the selected\n                    expressions together randomly.\n                    <br/>\n                    <br/>\n                    If you don't like any of the expressions then press \"Start over\" to get new ones.\n                    <br/>\n                    <br/>\n                </div>\n            </div>\n            <div className=\"Controls\" style={{display: \"flex\"}}>\n                <button onClick={() => {\n                    dispatch(setAllArt({newArt: generateRandomArt()}));\n                }}>Start over\n                </button>\n                <button onClick={() => {\n                    const selectedPieces = art.filter((piece, i) => piece.selected)\n                        .map(piece => parse(piece.textSource)!);\n                    if (selectedPieces.length === 0) {\n                        return;\n                    }\n                    const newArt = breed(selectedPieces, art.length)\n                        .map((expression, i) => createArtState(expression.toString()));\n                    dispatch(setAllArt({newArt}));\n                }}>Breed selected\n                </button>\n            </div>\n            <div className=\"GalleryFlow\" style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                {frames.map((frame, i) =>\n                    <div key={i.toString()}>\n                        {frame}\n                    </div>)}\n            </div>\n        </div>\n    );\n}","import Gallery from \"./Gallery\";\nimport React, {useEffect, useRef} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ArtState, createArtState, selectSettings, setAllArt, updateSettings} from \"../state/gallerySlice\";\nimport {randomExpression} from \"../expressions/generator\";\nimport \"./App.css\";\n\nexport function generateRandomArt(n = 21): ArtState[] {\n    const newArt = [];\n    for (let i = 0; i < n; i++) {\n        newArt.push(createArtState(randomExpression(6).toString()));\n    }\n    return newArt;\n}\n\nexport default function App() {\n    const canvas = useRef<HTMLCanvasElement>(null);\n    const settings = useSelector(selectSettings);\n    const dispatch = useDispatch();\n\n    const getGlContext = () => {\n        if (canvas.current === null) {\n            return null;\n        }\n        return canvas.current.getContext('webgl', {antialias: false});\n    }\n\n    // Generate initial functions.\n    useEffect(() => {\n        dispatch(setAllArt({newArt: generateRandomArt()}));\n    }, [dispatch]);\n    return (<div>\n        <canvas ref={canvas} id=\"glCanvas\"/>\n        <Gallery getGlContext={getGlContext}/>\n        <div>\n            <i>\"This art may not make sense to you. It makes Ness sleepy just thinking about it. Use Paralysis to knock\n                some sense into the painting.\"</i>\n            <br/>\n            — EarthBound Player's Guide\n        </div>\n        <br/>\n        <div style={{color: \"yellow\"}}>\n            UX developer wanted :)\n        </div>\n        <div style={{color: \"blue\"}}>\n            <a href=\"https://github.com/mbh95/abstract-art\">GitHub repo</a>\n        </div>\n        <input type=\"checkbox\"\n               name=\"highdpi\"\n               onChange={(e) => dispatch(updateSettings({newSettings: {highDpiSupport: e.target.checked}}))}\n               checked={settings.highDpiSupport}/>\n        <label htmlFor=\"highdpi\">High DPI Support</label>\n    </div>);\n}","import { configureStore } from '@reduxjs/toolkit'\nimport galleryReducer from \"./gallerySlice\"\nexport default configureStore({\n    reducer: {\n        gallery: galleryReducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from \"./view/App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./state/store\";\n\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));"],"sourceRoot":""}